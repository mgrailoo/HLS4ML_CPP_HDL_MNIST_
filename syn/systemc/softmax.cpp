// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "softmax.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic softmax::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic softmax::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<4> softmax::ap_ST_fsm_state1 = "1";
const sc_lv<4> softmax::ap_ST_fsm_state2 = "10";
const sc_lv<4> softmax::ap_ST_fsm_state3 = "100";
const sc_lv<4> softmax::ap_ST_fsm_state4 = "1000";
const sc_lv<32> softmax::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> softmax::ap_const_lv32_1 = "1";
const sc_lv<32> softmax::ap_const_lv32_2 = "10";
const sc_lv<32> softmax::ap_const_lv32_3 = "11";
const sc_lv<32> softmax::ap_const_lv32_6 = "110";
const sc_lv<32> softmax::ap_const_lv32_B = "1011";
const sc_lv<32> softmax::ap_const_lv32_4 = "100";
const sc_lv<32> softmax::ap_const_lv32_F = "1111";
const bool softmax::ap_const_boolean_1 = true;

softmax::softmax(sc_module_name name) : sc_module(name), mVcdFile(0) {
    exp_table1_U = new softmax_exp_table1("exp_table1_U");
    exp_table1_U->clk(ap_clk);
    exp_table1_U->reset(ap_rst);
    exp_table1_U->address0(exp_table1_address0);
    exp_table1_U->ce0(exp_table1_ce0);
    exp_table1_U->q0(exp_table1_q0);
    exp_table1_U->address1(exp_table1_address1);
    exp_table1_U->ce1(exp_table1_ce1);
    exp_table1_U->q1(exp_table1_q1);
    exp_table1_U->address2(exp_table1_address2);
    exp_table1_U->ce2(exp_table1_ce2);
    exp_table1_U->q2(exp_table1_q2);
    exp_table1_U->address3(exp_table1_address3);
    exp_table1_U->ce3(exp_table1_ce3);
    exp_table1_U->q3(exp_table1_q3);
    exp_table1_U->address4(exp_table1_address4);
    exp_table1_U->ce4(exp_table1_ce4);
    exp_table1_U->q4(exp_table1_q4);
    exp_table1_U->address5(exp_table1_address5);
    exp_table1_U->ce5(exp_table1_ce5);
    exp_table1_U->q5(exp_table1_q5);
    exp_table1_U->address6(exp_table1_address6);
    exp_table1_U->ce6(exp_table1_ce6);
    exp_table1_U->q6(exp_table1_q6);
    exp_table1_U->address7(exp_table1_address7);
    exp_table1_U->ce7(exp_table1_ce7);
    exp_table1_U->q7(exp_table1_q7);
    exp_table1_U->address8(exp_table1_address8);
    exp_table1_U->ce8(exp_table1_ce8);
    exp_table1_U->q8(exp_table1_q8);
    exp_table1_U->address9(exp_table1_address9);
    exp_table1_U->ce9(exp_table1_ce9);
    exp_table1_U->q9(exp_table1_q9);
    invert_table2_U = new softmax_invert_tag8j("invert_table2_U");
    invert_table2_U->clk(ap_clk);
    invert_table2_U->reset(ap_rst);
    invert_table2_U->address0(invert_table2_address0);
    invert_table2_U->ce0(invert_table2_ce0);
    invert_table2_U->q0(invert_table2_q0);
    grp_reduce_2_fu_328 = new reduce_2("grp_reduce_2_fu_328");
    grp_reduce_2_fu_328->ap_clk(ap_clk);
    grp_reduce_2_fu_328->ap_rst(ap_rst);
    grp_reduce_2_fu_328->ap_start(grp_reduce_2_fu_328_ap_start);
    grp_reduce_2_fu_328->ap_done(grp_reduce_2_fu_328_ap_done);
    grp_reduce_2_fu_328->ap_idle(grp_reduce_2_fu_328_ap_idle);
    grp_reduce_2_fu_328->ap_ready(grp_reduce_2_fu_328_ap_ready);
    grp_reduce_2_fu_328->x_0_V_read(exp_res_0_V_reg_771);
    grp_reduce_2_fu_328->x_1_V_read(exp_res_1_V_reg_777);
    grp_reduce_2_fu_328->x_2_V_read(exp_res_2_V_reg_783);
    grp_reduce_2_fu_328->x_3_V_read(exp_res_3_V_reg_789);
    grp_reduce_2_fu_328->x_4_V_read(exp_res_4_V_reg_795);
    grp_reduce_2_fu_328->x_5_V_read(exp_res_5_V_reg_801);
    grp_reduce_2_fu_328->x_6_V_read(exp_res_6_V_reg_807);
    grp_reduce_2_fu_328->x_7_V_read(exp_res_7_V_reg_813);
    grp_reduce_2_fu_328->x_8_V_read(exp_res_8_V_reg_819);
    grp_reduce_2_fu_328->x_9_V_read(exp_res_9_V_reg_825);
    grp_reduce_2_fu_328->ap_return(grp_reduce_2_fu_328_ap_return);
    myproject_mul_mulhbi_U256 = new myproject_mul_mulhbi<1,1,12,8,16>("myproject_mul_mulhbi_U256");
    myproject_mul_mulhbi_U256->din0(exp_res_0_V_reg_771);
    myproject_mul_mulhbi_U256->din1(mul_ln1118_fu_651_p1);
    myproject_mul_mulhbi_U256->dout(mul_ln1118_fu_651_p2);
    myproject_mul_mulhbi_U257 = new myproject_mul_mulhbi<1,1,12,8,16>("myproject_mul_mulhbi_U257");
    myproject_mul_mulhbi_U257->din0(exp_res_1_V_reg_777);
    myproject_mul_mulhbi_U257->din1(mul_ln1118_1_fu_658_p1);
    myproject_mul_mulhbi_U257->dout(mul_ln1118_1_fu_658_p2);
    myproject_mul_mulhbi_U258 = new myproject_mul_mulhbi<1,1,12,8,16>("myproject_mul_mulhbi_U258");
    myproject_mul_mulhbi_U258->din0(exp_res_2_V_reg_783);
    myproject_mul_mulhbi_U258->din1(mul_ln1118_2_fu_665_p1);
    myproject_mul_mulhbi_U258->dout(mul_ln1118_2_fu_665_p2);
    myproject_mul_mulhbi_U259 = new myproject_mul_mulhbi<1,1,12,8,16>("myproject_mul_mulhbi_U259");
    myproject_mul_mulhbi_U259->din0(exp_res_3_V_reg_789);
    myproject_mul_mulhbi_U259->din1(mul_ln1118_3_fu_672_p1);
    myproject_mul_mulhbi_U259->dout(mul_ln1118_3_fu_672_p2);
    myproject_mul_mulhbi_U260 = new myproject_mul_mulhbi<1,1,12,8,16>("myproject_mul_mulhbi_U260");
    myproject_mul_mulhbi_U260->din0(exp_res_4_V_reg_795);
    myproject_mul_mulhbi_U260->din1(mul_ln1118_4_fu_679_p1);
    myproject_mul_mulhbi_U260->dout(mul_ln1118_4_fu_679_p2);
    myproject_mul_mulhbi_U261 = new myproject_mul_mulhbi<1,1,12,8,16>("myproject_mul_mulhbi_U261");
    myproject_mul_mulhbi_U261->din0(exp_res_5_V_reg_801);
    myproject_mul_mulhbi_U261->din1(mul_ln1118_5_fu_686_p1);
    myproject_mul_mulhbi_U261->dout(mul_ln1118_5_fu_686_p2);
    myproject_mul_mulhbi_U262 = new myproject_mul_mulhbi<1,1,12,8,16>("myproject_mul_mulhbi_U262");
    myproject_mul_mulhbi_U262->din0(exp_res_6_V_reg_807);
    myproject_mul_mulhbi_U262->din1(mul_ln1118_6_fu_693_p1);
    myproject_mul_mulhbi_U262->dout(mul_ln1118_6_fu_693_p2);
    myproject_mul_mulhbi_U263 = new myproject_mul_mulhbi<1,1,12,8,16>("myproject_mul_mulhbi_U263");
    myproject_mul_mulhbi_U263->din0(exp_res_7_V_reg_813);
    myproject_mul_mulhbi_U263->din1(mul_ln1118_7_fu_700_p1);
    myproject_mul_mulhbi_U263->dout(mul_ln1118_7_fu_700_p2);
    myproject_mul_mulhbi_U264 = new myproject_mul_mulhbi<1,1,12,8,16>("myproject_mul_mulhbi_U264");
    myproject_mul_mulhbi_U264->din0(exp_res_8_V_reg_819);
    myproject_mul_mulhbi_U264->din1(mul_ln1118_8_fu_707_p1);
    myproject_mul_mulhbi_U264->dout(mul_ln1118_8_fu_707_p2);
    myproject_mul_mulhbi_U265 = new myproject_mul_mulhbi<1,1,12,8,16>("myproject_mul_mulhbi_U265");
    myproject_mul_mulhbi_U265->din0(exp_res_9_V_reg_825);
    myproject_mul_mulhbi_U265->din1(mul_ln1118_9_fu_714_p1);
    myproject_mul_mulhbi_U265->dout(mul_ln1118_9_fu_714_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_exp_table1_address0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( zext_ln250_fu_362_p1 );

    SC_METHOD(thread_exp_table1_address1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( zext_ln250_1_fu_377_p1 );

    SC_METHOD(thread_exp_table1_address2);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( zext_ln250_2_fu_392_p1 );

    SC_METHOD(thread_exp_table1_address3);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( zext_ln250_3_fu_407_p1 );

    SC_METHOD(thread_exp_table1_address4);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( zext_ln250_4_fu_422_p1 );

    SC_METHOD(thread_exp_table1_address5);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( zext_ln250_5_fu_437_p1 );

    SC_METHOD(thread_exp_table1_address6);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( zext_ln250_6_fu_452_p1 );

    SC_METHOD(thread_exp_table1_address7);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( zext_ln250_7_fu_467_p1 );

    SC_METHOD(thread_exp_table1_address8);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( zext_ln250_8_fu_482_p1 );

    SC_METHOD(thread_exp_table1_address9);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( zext_ln250_9_fu_497_p1 );

    SC_METHOD(thread_exp_table1_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_exp_table1_ce1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_exp_table1_ce2);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_exp_table1_ce3);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_exp_table1_ce4);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_exp_table1_ce5);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_exp_table1_ce6);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_exp_table1_ce7);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_exp_table1_ce8);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_exp_table1_ce9);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_grp_reduce_2_fu_328_ap_start);
    sensitive << ( grp_reduce_2_fu_328_ap_start_reg );

    SC_METHOD(thread_invert_table2_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln258_fu_512_p1 );

    SC_METHOD(thread_invert_table2_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( grp_reduce_2_fu_328_ap_done );

    SC_METHOD(thread_mul_ln1118_1_fu_658_p1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( sext_ln1116_fu_517_p1 );

    SC_METHOD(thread_mul_ln1118_2_fu_665_p1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( sext_ln1116_fu_517_p1 );

    SC_METHOD(thread_mul_ln1118_3_fu_672_p1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( sext_ln1116_fu_517_p1 );

    SC_METHOD(thread_mul_ln1118_4_fu_679_p1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( sext_ln1116_fu_517_p1 );

    SC_METHOD(thread_mul_ln1118_5_fu_686_p1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( sext_ln1116_fu_517_p1 );

    SC_METHOD(thread_mul_ln1118_6_fu_693_p1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( sext_ln1116_fu_517_p1 );

    SC_METHOD(thread_mul_ln1118_7_fu_700_p1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( sext_ln1116_fu_517_p1 );

    SC_METHOD(thread_mul_ln1118_8_fu_707_p1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( sext_ln1116_fu_517_p1 );

    SC_METHOD(thread_mul_ln1118_9_fu_714_p1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( sext_ln1116_fu_517_p1 );

    SC_METHOD(thread_mul_ln1118_fu_651_p1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( sext_ln1116_fu_517_p1 );

    SC_METHOD(thread_res_0_V);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( mul_ln1118_fu_651_p2 );

    SC_METHOD(thread_res_0_V_ap_vld);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_res_1_V);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( mul_ln1118_1_fu_658_p2 );

    SC_METHOD(thread_res_1_V_ap_vld);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_res_2_V);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( mul_ln1118_2_fu_665_p2 );

    SC_METHOD(thread_res_2_V_ap_vld);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_res_3_V);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( mul_ln1118_3_fu_672_p2 );

    SC_METHOD(thread_res_3_V_ap_vld);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_res_4_V);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( mul_ln1118_4_fu_679_p2 );

    SC_METHOD(thread_res_4_V_ap_vld);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_res_5_V);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( mul_ln1118_5_fu_686_p2 );

    SC_METHOD(thread_res_5_V_ap_vld);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_res_6_V);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( mul_ln1118_6_fu_693_p2 );

    SC_METHOD(thread_res_6_V_ap_vld);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_res_7_V);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( mul_ln1118_7_fu_700_p2 );

    SC_METHOD(thread_res_7_V_ap_vld);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_res_8_V);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( mul_ln1118_8_fu_707_p2 );

    SC_METHOD(thread_res_8_V_ap_vld);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_res_9_V);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( mul_ln1118_9_fu_714_p2 );

    SC_METHOD(thread_res_9_V_ap_vld);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_sext_ln1116_fu_517_p1);
    sensitive << ( invert_table2_q0 );

    SC_METHOD(thread_y_V_10_fu_502_p4);
    sensitive << ( grp_reduce_2_fu_328_ap_return );

    SC_METHOD(thread_y_V_1_fu_367_p4);
    sensitive << ( data_1_V_read );

    SC_METHOD(thread_y_V_2_fu_382_p4);
    sensitive << ( data_2_V_read );

    SC_METHOD(thread_y_V_3_fu_397_p4);
    sensitive << ( data_3_V_read );

    SC_METHOD(thread_y_V_4_fu_412_p4);
    sensitive << ( data_4_V_read );

    SC_METHOD(thread_y_V_5_fu_427_p4);
    sensitive << ( data_5_V_read );

    SC_METHOD(thread_y_V_6_fu_442_p4);
    sensitive << ( data_6_V_read );

    SC_METHOD(thread_y_V_7_fu_457_p4);
    sensitive << ( data_7_V_read );

    SC_METHOD(thread_y_V_8_fu_472_p4);
    sensitive << ( data_8_V_read );

    SC_METHOD(thread_y_V_9_fu_487_p4);
    sensitive << ( data_9_V_read );

    SC_METHOD(thread_y_V_fu_352_p4);
    sensitive << ( data_0_V_read );

    SC_METHOD(thread_zext_ln250_1_fu_377_p1);
    sensitive << ( y_V_1_fu_367_p4 );

    SC_METHOD(thread_zext_ln250_2_fu_392_p1);
    sensitive << ( y_V_2_fu_382_p4 );

    SC_METHOD(thread_zext_ln250_3_fu_407_p1);
    sensitive << ( y_V_3_fu_397_p4 );

    SC_METHOD(thread_zext_ln250_4_fu_422_p1);
    sensitive << ( y_V_4_fu_412_p4 );

    SC_METHOD(thread_zext_ln250_5_fu_437_p1);
    sensitive << ( y_V_5_fu_427_p4 );

    SC_METHOD(thread_zext_ln250_6_fu_452_p1);
    sensitive << ( y_V_6_fu_442_p4 );

    SC_METHOD(thread_zext_ln250_7_fu_467_p1);
    sensitive << ( y_V_7_fu_457_p4 );

    SC_METHOD(thread_zext_ln250_8_fu_482_p1);
    sensitive << ( y_V_8_fu_472_p4 );

    SC_METHOD(thread_zext_ln250_9_fu_497_p1);
    sensitive << ( y_V_9_fu_487_p4 );

    SC_METHOD(thread_zext_ln250_fu_362_p1);
    sensitive << ( y_V_fu_352_p4 );

    SC_METHOD(thread_zext_ln258_fu_512_p1);
    sensitive << ( y_V_10_fu_502_p4 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( grp_reduce_2_fu_328_ap_done );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "0001";
    grp_reduce_2_fu_328_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "softmax_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, data_0_V_read, "(port)data_0_V_read");
    sc_trace(mVcdFile, data_1_V_read, "(port)data_1_V_read");
    sc_trace(mVcdFile, data_2_V_read, "(port)data_2_V_read");
    sc_trace(mVcdFile, data_3_V_read, "(port)data_3_V_read");
    sc_trace(mVcdFile, data_4_V_read, "(port)data_4_V_read");
    sc_trace(mVcdFile, data_5_V_read, "(port)data_5_V_read");
    sc_trace(mVcdFile, data_6_V_read, "(port)data_6_V_read");
    sc_trace(mVcdFile, data_7_V_read, "(port)data_7_V_read");
    sc_trace(mVcdFile, data_8_V_read, "(port)data_8_V_read");
    sc_trace(mVcdFile, data_9_V_read, "(port)data_9_V_read");
    sc_trace(mVcdFile, res_0_V, "(port)res_0_V");
    sc_trace(mVcdFile, res_0_V_ap_vld, "(port)res_0_V_ap_vld");
    sc_trace(mVcdFile, res_1_V, "(port)res_1_V");
    sc_trace(mVcdFile, res_1_V_ap_vld, "(port)res_1_V_ap_vld");
    sc_trace(mVcdFile, res_2_V, "(port)res_2_V");
    sc_trace(mVcdFile, res_2_V_ap_vld, "(port)res_2_V_ap_vld");
    sc_trace(mVcdFile, res_3_V, "(port)res_3_V");
    sc_trace(mVcdFile, res_3_V_ap_vld, "(port)res_3_V_ap_vld");
    sc_trace(mVcdFile, res_4_V, "(port)res_4_V");
    sc_trace(mVcdFile, res_4_V_ap_vld, "(port)res_4_V_ap_vld");
    sc_trace(mVcdFile, res_5_V, "(port)res_5_V");
    sc_trace(mVcdFile, res_5_V_ap_vld, "(port)res_5_V_ap_vld");
    sc_trace(mVcdFile, res_6_V, "(port)res_6_V");
    sc_trace(mVcdFile, res_6_V_ap_vld, "(port)res_6_V_ap_vld");
    sc_trace(mVcdFile, res_7_V, "(port)res_7_V");
    sc_trace(mVcdFile, res_7_V_ap_vld, "(port)res_7_V_ap_vld");
    sc_trace(mVcdFile, res_8_V, "(port)res_8_V");
    sc_trace(mVcdFile, res_8_V_ap_vld, "(port)res_8_V_ap_vld");
    sc_trace(mVcdFile, res_9_V, "(port)res_9_V");
    sc_trace(mVcdFile, res_9_V_ap_vld, "(port)res_9_V_ap_vld");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, exp_table1_address0, "exp_table1_address0");
    sc_trace(mVcdFile, exp_table1_ce0, "exp_table1_ce0");
    sc_trace(mVcdFile, exp_table1_q0, "exp_table1_q0");
    sc_trace(mVcdFile, exp_table1_address1, "exp_table1_address1");
    sc_trace(mVcdFile, exp_table1_ce1, "exp_table1_ce1");
    sc_trace(mVcdFile, exp_table1_q1, "exp_table1_q1");
    sc_trace(mVcdFile, exp_table1_address2, "exp_table1_address2");
    sc_trace(mVcdFile, exp_table1_ce2, "exp_table1_ce2");
    sc_trace(mVcdFile, exp_table1_q2, "exp_table1_q2");
    sc_trace(mVcdFile, exp_table1_address3, "exp_table1_address3");
    sc_trace(mVcdFile, exp_table1_ce3, "exp_table1_ce3");
    sc_trace(mVcdFile, exp_table1_q3, "exp_table1_q3");
    sc_trace(mVcdFile, exp_table1_address4, "exp_table1_address4");
    sc_trace(mVcdFile, exp_table1_ce4, "exp_table1_ce4");
    sc_trace(mVcdFile, exp_table1_q4, "exp_table1_q4");
    sc_trace(mVcdFile, exp_table1_address5, "exp_table1_address5");
    sc_trace(mVcdFile, exp_table1_ce5, "exp_table1_ce5");
    sc_trace(mVcdFile, exp_table1_q5, "exp_table1_q5");
    sc_trace(mVcdFile, exp_table1_address6, "exp_table1_address6");
    sc_trace(mVcdFile, exp_table1_ce6, "exp_table1_ce6");
    sc_trace(mVcdFile, exp_table1_q6, "exp_table1_q6");
    sc_trace(mVcdFile, exp_table1_address7, "exp_table1_address7");
    sc_trace(mVcdFile, exp_table1_ce7, "exp_table1_ce7");
    sc_trace(mVcdFile, exp_table1_q7, "exp_table1_q7");
    sc_trace(mVcdFile, exp_table1_address8, "exp_table1_address8");
    sc_trace(mVcdFile, exp_table1_ce8, "exp_table1_ce8");
    sc_trace(mVcdFile, exp_table1_q8, "exp_table1_q8");
    sc_trace(mVcdFile, exp_table1_address9, "exp_table1_address9");
    sc_trace(mVcdFile, exp_table1_ce9, "exp_table1_ce9");
    sc_trace(mVcdFile, exp_table1_q9, "exp_table1_q9");
    sc_trace(mVcdFile, invert_table2_address0, "invert_table2_address0");
    sc_trace(mVcdFile, invert_table2_ce0, "invert_table2_ce0");
    sc_trace(mVcdFile, invert_table2_q0, "invert_table2_q0");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, exp_res_0_V_reg_771, "exp_res_0_V_reg_771");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, exp_res_1_V_reg_777, "exp_res_1_V_reg_777");
    sc_trace(mVcdFile, exp_res_2_V_reg_783, "exp_res_2_V_reg_783");
    sc_trace(mVcdFile, exp_res_3_V_reg_789, "exp_res_3_V_reg_789");
    sc_trace(mVcdFile, exp_res_4_V_reg_795, "exp_res_4_V_reg_795");
    sc_trace(mVcdFile, exp_res_5_V_reg_801, "exp_res_5_V_reg_801");
    sc_trace(mVcdFile, exp_res_6_V_reg_807, "exp_res_6_V_reg_807");
    sc_trace(mVcdFile, exp_res_7_V_reg_813, "exp_res_7_V_reg_813");
    sc_trace(mVcdFile, exp_res_8_V_reg_819, "exp_res_8_V_reg_819");
    sc_trace(mVcdFile, exp_res_9_V_reg_825, "exp_res_9_V_reg_825");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, grp_reduce_2_fu_328_ap_ready, "grp_reduce_2_fu_328_ap_ready");
    sc_trace(mVcdFile, grp_reduce_2_fu_328_ap_done, "grp_reduce_2_fu_328_ap_done");
    sc_trace(mVcdFile, grp_reduce_2_fu_328_ap_start, "grp_reduce_2_fu_328_ap_start");
    sc_trace(mVcdFile, grp_reduce_2_fu_328_ap_idle, "grp_reduce_2_fu_328_ap_idle");
    sc_trace(mVcdFile, grp_reduce_2_fu_328_ap_return, "grp_reduce_2_fu_328_ap_return");
    sc_trace(mVcdFile, grp_reduce_2_fu_328_ap_start_reg, "grp_reduce_2_fu_328_ap_start_reg");
    sc_trace(mVcdFile, zext_ln250_fu_362_p1, "zext_ln250_fu_362_p1");
    sc_trace(mVcdFile, zext_ln250_1_fu_377_p1, "zext_ln250_1_fu_377_p1");
    sc_trace(mVcdFile, zext_ln250_2_fu_392_p1, "zext_ln250_2_fu_392_p1");
    sc_trace(mVcdFile, zext_ln250_3_fu_407_p1, "zext_ln250_3_fu_407_p1");
    sc_trace(mVcdFile, zext_ln250_4_fu_422_p1, "zext_ln250_4_fu_422_p1");
    sc_trace(mVcdFile, zext_ln250_5_fu_437_p1, "zext_ln250_5_fu_437_p1");
    sc_trace(mVcdFile, zext_ln250_6_fu_452_p1, "zext_ln250_6_fu_452_p1");
    sc_trace(mVcdFile, zext_ln250_7_fu_467_p1, "zext_ln250_7_fu_467_p1");
    sc_trace(mVcdFile, zext_ln250_8_fu_482_p1, "zext_ln250_8_fu_482_p1");
    sc_trace(mVcdFile, zext_ln250_9_fu_497_p1, "zext_ln250_9_fu_497_p1");
    sc_trace(mVcdFile, zext_ln258_fu_512_p1, "zext_ln258_fu_512_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, y_V_fu_352_p4, "y_V_fu_352_p4");
    sc_trace(mVcdFile, y_V_1_fu_367_p4, "y_V_1_fu_367_p4");
    sc_trace(mVcdFile, y_V_2_fu_382_p4, "y_V_2_fu_382_p4");
    sc_trace(mVcdFile, y_V_3_fu_397_p4, "y_V_3_fu_397_p4");
    sc_trace(mVcdFile, y_V_4_fu_412_p4, "y_V_4_fu_412_p4");
    sc_trace(mVcdFile, y_V_5_fu_427_p4, "y_V_5_fu_427_p4");
    sc_trace(mVcdFile, y_V_6_fu_442_p4, "y_V_6_fu_442_p4");
    sc_trace(mVcdFile, y_V_7_fu_457_p4, "y_V_7_fu_457_p4");
    sc_trace(mVcdFile, y_V_8_fu_472_p4, "y_V_8_fu_472_p4");
    sc_trace(mVcdFile, y_V_9_fu_487_p4, "y_V_9_fu_487_p4");
    sc_trace(mVcdFile, y_V_10_fu_502_p4, "y_V_10_fu_502_p4");
    sc_trace(mVcdFile, mul_ln1118_fu_651_p2, "mul_ln1118_fu_651_p2");
    sc_trace(mVcdFile, mul_ln1118_1_fu_658_p2, "mul_ln1118_1_fu_658_p2");
    sc_trace(mVcdFile, mul_ln1118_2_fu_665_p2, "mul_ln1118_2_fu_665_p2");
    sc_trace(mVcdFile, mul_ln1118_3_fu_672_p2, "mul_ln1118_3_fu_672_p2");
    sc_trace(mVcdFile, mul_ln1118_4_fu_679_p2, "mul_ln1118_4_fu_679_p2");
    sc_trace(mVcdFile, mul_ln1118_5_fu_686_p2, "mul_ln1118_5_fu_686_p2");
    sc_trace(mVcdFile, mul_ln1118_6_fu_693_p2, "mul_ln1118_6_fu_693_p2");
    sc_trace(mVcdFile, mul_ln1118_7_fu_700_p2, "mul_ln1118_7_fu_700_p2");
    sc_trace(mVcdFile, mul_ln1118_8_fu_707_p2, "mul_ln1118_8_fu_707_p2");
    sc_trace(mVcdFile, mul_ln1118_9_fu_714_p2, "mul_ln1118_9_fu_714_p2");
    sc_trace(mVcdFile, mul_ln1118_fu_651_p1, "mul_ln1118_fu_651_p1");
    sc_trace(mVcdFile, sext_ln1116_fu_517_p1, "sext_ln1116_fu_517_p1");
    sc_trace(mVcdFile, mul_ln1118_1_fu_658_p1, "mul_ln1118_1_fu_658_p1");
    sc_trace(mVcdFile, mul_ln1118_2_fu_665_p1, "mul_ln1118_2_fu_665_p1");
    sc_trace(mVcdFile, mul_ln1118_3_fu_672_p1, "mul_ln1118_3_fu_672_p1");
    sc_trace(mVcdFile, mul_ln1118_4_fu_679_p1, "mul_ln1118_4_fu_679_p1");
    sc_trace(mVcdFile, mul_ln1118_5_fu_686_p1, "mul_ln1118_5_fu_686_p1");
    sc_trace(mVcdFile, mul_ln1118_6_fu_693_p1, "mul_ln1118_6_fu_693_p1");
    sc_trace(mVcdFile, mul_ln1118_7_fu_700_p1, "mul_ln1118_7_fu_700_p1");
    sc_trace(mVcdFile, mul_ln1118_8_fu_707_p1, "mul_ln1118_8_fu_707_p1");
    sc_trace(mVcdFile, mul_ln1118_9_fu_714_p1, "mul_ln1118_9_fu_714_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

softmax::~softmax() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete exp_table1_U;
    delete invert_table2_U;
    delete grp_reduce_2_fu_328;
    delete myproject_mul_mulhbi_U256;
    delete myproject_mul_mulhbi_U257;
    delete myproject_mul_mulhbi_U258;
    delete myproject_mul_mulhbi_U259;
    delete myproject_mul_mulhbi_U260;
    delete myproject_mul_mulhbi_U261;
    delete myproject_mul_mulhbi_U262;
    delete myproject_mul_mulhbi_U263;
    delete myproject_mul_mulhbi_U264;
    delete myproject_mul_mulhbi_U265;
}

void softmax::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_reduce_2_fu_328_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
            grp_reduce_2_fu_328_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_reduce_2_fu_328_ap_ready.read())) {
            grp_reduce_2_fu_328_ap_start_reg = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        exp_res_0_V_reg_771 = exp_table1_q0.read();
        exp_res_1_V_reg_777 = exp_table1_q1.read();
        exp_res_2_V_reg_783 = exp_table1_q2.read();
        exp_res_3_V_reg_789 = exp_table1_q3.read();
        exp_res_4_V_reg_795 = exp_table1_q4.read();
        exp_res_5_V_reg_801 = exp_table1_q5.read();
        exp_res_6_V_reg_807 = exp_table1_q6.read();
        exp_res_7_V_reg_813 = exp_table1_q7.read();
        exp_res_8_V_reg_819 = exp_table1_q8.read();
        exp_res_9_V_reg_825 = exp_table1_q9.read();
    }
}

void softmax::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void softmax::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void softmax::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void softmax::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void softmax::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void softmax::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void softmax::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void softmax::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void softmax::thread_exp_table1_address0() {
    exp_table1_address0 =  (sc_lv<6>) (zext_ln250_fu_362_p1.read());
}

void softmax::thread_exp_table1_address1() {
    exp_table1_address1 =  (sc_lv<6>) (zext_ln250_1_fu_377_p1.read());
}

void softmax::thread_exp_table1_address2() {
    exp_table1_address2 =  (sc_lv<6>) (zext_ln250_2_fu_392_p1.read());
}

void softmax::thread_exp_table1_address3() {
    exp_table1_address3 =  (sc_lv<6>) (zext_ln250_3_fu_407_p1.read());
}

void softmax::thread_exp_table1_address4() {
    exp_table1_address4 =  (sc_lv<6>) (zext_ln250_4_fu_422_p1.read());
}

void softmax::thread_exp_table1_address5() {
    exp_table1_address5 =  (sc_lv<6>) (zext_ln250_5_fu_437_p1.read());
}

void softmax::thread_exp_table1_address6() {
    exp_table1_address6 =  (sc_lv<6>) (zext_ln250_6_fu_452_p1.read());
}

void softmax::thread_exp_table1_address7() {
    exp_table1_address7 =  (sc_lv<6>) (zext_ln250_7_fu_467_p1.read());
}

void softmax::thread_exp_table1_address8() {
    exp_table1_address8 =  (sc_lv<6>) (zext_ln250_8_fu_482_p1.read());
}

void softmax::thread_exp_table1_address9() {
    exp_table1_address9 =  (sc_lv<6>) (zext_ln250_9_fu_497_p1.read());
}

void softmax::thread_exp_table1_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        exp_table1_ce0 = ap_const_logic_1;
    } else {
        exp_table1_ce0 = ap_const_logic_0;
    }
}

void softmax::thread_exp_table1_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        exp_table1_ce1 = ap_const_logic_1;
    } else {
        exp_table1_ce1 = ap_const_logic_0;
    }
}

void softmax::thread_exp_table1_ce2() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        exp_table1_ce2 = ap_const_logic_1;
    } else {
        exp_table1_ce2 = ap_const_logic_0;
    }
}

void softmax::thread_exp_table1_ce3() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        exp_table1_ce3 = ap_const_logic_1;
    } else {
        exp_table1_ce3 = ap_const_logic_0;
    }
}

void softmax::thread_exp_table1_ce4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        exp_table1_ce4 = ap_const_logic_1;
    } else {
        exp_table1_ce4 = ap_const_logic_0;
    }
}

void softmax::thread_exp_table1_ce5() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        exp_table1_ce5 = ap_const_logic_1;
    } else {
        exp_table1_ce5 = ap_const_logic_0;
    }
}

void softmax::thread_exp_table1_ce6() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        exp_table1_ce6 = ap_const_logic_1;
    } else {
        exp_table1_ce6 = ap_const_logic_0;
    }
}

void softmax::thread_exp_table1_ce7() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        exp_table1_ce7 = ap_const_logic_1;
    } else {
        exp_table1_ce7 = ap_const_logic_0;
    }
}

void softmax::thread_exp_table1_ce8() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        exp_table1_ce8 = ap_const_logic_1;
    } else {
        exp_table1_ce8 = ap_const_logic_0;
    }
}

void softmax::thread_exp_table1_ce9() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        exp_table1_ce9 = ap_const_logic_1;
    } else {
        exp_table1_ce9 = ap_const_logic_0;
    }
}

void softmax::thread_grp_reduce_2_fu_328_ap_start() {
    grp_reduce_2_fu_328_ap_start = grp_reduce_2_fu_328_ap_start_reg.read();
}

void softmax::thread_invert_table2_address0() {
    invert_table2_address0 =  (sc_lv<6>) (zext_ln258_fu_512_p1.read());
}

void softmax::thread_invert_table2_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(grp_reduce_2_fu_328_ap_done.read(), ap_const_logic_1))) {
        invert_table2_ce0 = ap_const_logic_1;
    } else {
        invert_table2_ce0 = ap_const_logic_0;
    }
}

void softmax::thread_mul_ln1118_1_fu_658_p1() {
    mul_ln1118_1_fu_658_p1 =  (sc_lv<8>) (sext_ln1116_fu_517_p1.read());
}

void softmax::thread_mul_ln1118_2_fu_665_p1() {
    mul_ln1118_2_fu_665_p1 =  (sc_lv<8>) (sext_ln1116_fu_517_p1.read());
}

void softmax::thread_mul_ln1118_3_fu_672_p1() {
    mul_ln1118_3_fu_672_p1 =  (sc_lv<8>) (sext_ln1116_fu_517_p1.read());
}

void softmax::thread_mul_ln1118_4_fu_679_p1() {
    mul_ln1118_4_fu_679_p1 =  (sc_lv<8>) (sext_ln1116_fu_517_p1.read());
}

void softmax::thread_mul_ln1118_5_fu_686_p1() {
    mul_ln1118_5_fu_686_p1 =  (sc_lv<8>) (sext_ln1116_fu_517_p1.read());
}

void softmax::thread_mul_ln1118_6_fu_693_p1() {
    mul_ln1118_6_fu_693_p1 =  (sc_lv<8>) (sext_ln1116_fu_517_p1.read());
}

void softmax::thread_mul_ln1118_7_fu_700_p1() {
    mul_ln1118_7_fu_700_p1 =  (sc_lv<8>) (sext_ln1116_fu_517_p1.read());
}

void softmax::thread_mul_ln1118_8_fu_707_p1() {
    mul_ln1118_8_fu_707_p1 =  (sc_lv<8>) (sext_ln1116_fu_517_p1.read());
}

void softmax::thread_mul_ln1118_9_fu_714_p1() {
    mul_ln1118_9_fu_714_p1 =  (sc_lv<8>) (sext_ln1116_fu_517_p1.read());
}

void softmax::thread_mul_ln1118_fu_651_p1() {
    mul_ln1118_fu_651_p1 =  (sc_lv<8>) (sext_ln1116_fu_517_p1.read());
}

void softmax::thread_res_0_V() {
    res_0_V = mul_ln1118_fu_651_p2.read().range(15, 4);
}

void softmax::thread_res_0_V_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        res_0_V_ap_vld = ap_const_logic_1;
    } else {
        res_0_V_ap_vld = ap_const_logic_0;
    }
}

void softmax::thread_res_1_V() {
    res_1_V = mul_ln1118_1_fu_658_p2.read().range(15, 4);
}

void softmax::thread_res_1_V_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        res_1_V_ap_vld = ap_const_logic_1;
    } else {
        res_1_V_ap_vld = ap_const_logic_0;
    }
}

void softmax::thread_res_2_V() {
    res_2_V = mul_ln1118_2_fu_665_p2.read().range(15, 4);
}

void softmax::thread_res_2_V_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        res_2_V_ap_vld = ap_const_logic_1;
    } else {
        res_2_V_ap_vld = ap_const_logic_0;
    }
}

void softmax::thread_res_3_V() {
    res_3_V = mul_ln1118_3_fu_672_p2.read().range(15, 4);
}

void softmax::thread_res_3_V_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        res_3_V_ap_vld = ap_const_logic_1;
    } else {
        res_3_V_ap_vld = ap_const_logic_0;
    }
}

void softmax::thread_res_4_V() {
    res_4_V = mul_ln1118_4_fu_679_p2.read().range(15, 4);
}

void softmax::thread_res_4_V_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        res_4_V_ap_vld = ap_const_logic_1;
    } else {
        res_4_V_ap_vld = ap_const_logic_0;
    }
}

void softmax::thread_res_5_V() {
    res_5_V = mul_ln1118_5_fu_686_p2.read().range(15, 4);
}

void softmax::thread_res_5_V_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        res_5_V_ap_vld = ap_const_logic_1;
    } else {
        res_5_V_ap_vld = ap_const_logic_0;
    }
}

void softmax::thread_res_6_V() {
    res_6_V = mul_ln1118_6_fu_693_p2.read().range(15, 4);
}

void softmax::thread_res_6_V_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        res_6_V_ap_vld = ap_const_logic_1;
    } else {
        res_6_V_ap_vld = ap_const_logic_0;
    }
}

void softmax::thread_res_7_V() {
    res_7_V = mul_ln1118_7_fu_700_p2.read().range(15, 4);
}

void softmax::thread_res_7_V_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        res_7_V_ap_vld = ap_const_logic_1;
    } else {
        res_7_V_ap_vld = ap_const_logic_0;
    }
}

void softmax::thread_res_8_V() {
    res_8_V = mul_ln1118_8_fu_707_p2.read().range(15, 4);
}

void softmax::thread_res_8_V_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        res_8_V_ap_vld = ap_const_logic_1;
    } else {
        res_8_V_ap_vld = ap_const_logic_0;
    }
}

void softmax::thread_res_9_V() {
    res_9_V = mul_ln1118_9_fu_714_p2.read().range(15, 4);
}

void softmax::thread_res_9_V_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        res_9_V_ap_vld = ap_const_logic_1;
    } else {
        res_9_V_ap_vld = ap_const_logic_0;
    }
}

void softmax::thread_sext_ln1116_fu_517_p1() {
    sext_ln1116_fu_517_p1 = esl_sext<16,8>(invert_table2_q0.read());
}

void softmax::thread_y_V_10_fu_502_p4() {
    y_V_10_fu_502_p4 = grp_reduce_2_fu_328_ap_return.read().range(11, 6);
}

void softmax::thread_y_V_1_fu_367_p4() {
    y_V_1_fu_367_p4 = data_1_V_read.read().range(11, 6);
}

void softmax::thread_y_V_2_fu_382_p4() {
    y_V_2_fu_382_p4 = data_2_V_read.read().range(11, 6);
}

void softmax::thread_y_V_3_fu_397_p4() {
    y_V_3_fu_397_p4 = data_3_V_read.read().range(11, 6);
}

void softmax::thread_y_V_4_fu_412_p4() {
    y_V_4_fu_412_p4 = data_4_V_read.read().range(11, 6);
}

void softmax::thread_y_V_5_fu_427_p4() {
    y_V_5_fu_427_p4 = data_5_V_read.read().range(11, 6);
}

void softmax::thread_y_V_6_fu_442_p4() {
    y_V_6_fu_442_p4 = data_6_V_read.read().range(11, 6);
}

void softmax::thread_y_V_7_fu_457_p4() {
    y_V_7_fu_457_p4 = data_7_V_read.read().range(11, 6);
}

void softmax::thread_y_V_8_fu_472_p4() {
    y_V_8_fu_472_p4 = data_8_V_read.read().range(11, 6);
}

void softmax::thread_y_V_9_fu_487_p4() {
    y_V_9_fu_487_p4 = data_9_V_read.read().range(11, 6);
}

void softmax::thread_y_V_fu_352_p4() {
    y_V_fu_352_p4 = data_0_V_read.read().range(11, 6);
}

void softmax::thread_zext_ln250_1_fu_377_p1() {
    zext_ln250_1_fu_377_p1 = esl_zext<64,6>(y_V_1_fu_367_p4.read());
}

void softmax::thread_zext_ln250_2_fu_392_p1() {
    zext_ln250_2_fu_392_p1 = esl_zext<64,6>(y_V_2_fu_382_p4.read());
}

void softmax::thread_zext_ln250_3_fu_407_p1() {
    zext_ln250_3_fu_407_p1 = esl_zext<64,6>(y_V_3_fu_397_p4.read());
}

void softmax::thread_zext_ln250_4_fu_422_p1() {
    zext_ln250_4_fu_422_p1 = esl_zext<64,6>(y_V_4_fu_412_p4.read());
}

void softmax::thread_zext_ln250_5_fu_437_p1() {
    zext_ln250_5_fu_437_p1 = esl_zext<64,6>(y_V_5_fu_427_p4.read());
}

void softmax::thread_zext_ln250_6_fu_452_p1() {
    zext_ln250_6_fu_452_p1 = esl_zext<64,6>(y_V_6_fu_442_p4.read());
}

void softmax::thread_zext_ln250_7_fu_467_p1() {
    zext_ln250_7_fu_467_p1 = esl_zext<64,6>(y_V_7_fu_457_p4.read());
}

void softmax::thread_zext_ln250_8_fu_482_p1() {
    zext_ln250_8_fu_482_p1 = esl_zext<64,6>(y_V_8_fu_472_p4.read());
}

void softmax::thread_zext_ln250_9_fu_497_p1() {
    zext_ln250_9_fu_497_p1 = esl_zext<64,6>(y_V_9_fu_487_p4.read());
}

void softmax::thread_zext_ln250_fu_362_p1() {
    zext_ln250_fu_362_p1 = esl_zext<64,6>(y_V_fu_352_p4.read());
}

void softmax::thread_zext_ln258_fu_512_p1() {
    zext_ln258_fu_512_p1 = esl_zext<64,6>(y_V_10_fu_502_p4.read());
}

void softmax::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(grp_reduce_2_fu_328_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXXX";
            break;
    }
}

}

